name: OSSGadget_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr: none

resources:
  repositories:
    - repository: templates
      type: git
      name: Data/OSS-Tools-Pipeline-Templates
      ref: refs/tags/v2.0.0 
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

variables:
  DotnetVersion: '8.0.x'
  BinaryFiles: 'oss-gadget-cli.exe, oss-find-squats-lib.dll, OSSGadget.Shared.Cli.dll, OSSGadget.Shared.Lib.dll'

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      sourceRepositoriesToScan:
        exclude:
          - repository: 1esPipelines
          - repository: templates
    pool:
      name: MSSecurity-1ES-Build-Agents-Pool
      image: MSSecurity-1ES-Windows-2022
      os: windows
    stages:
    - stage: Test
      jobs:
      - template: dotnet-test-job.yml@templates
        parameters:
          jobName: 'dotnet_test_windows'
          dotnetVersions: ['6.0.x','7.0.x','8.0.x']
          poolName: MSSecurity-1ES-Build-Agents-Pool
          poolImage: MSSecurity-1ES-Windows-2022
          poolOs: windows
          projectPath: 'src/oss-tests/oss-tests.csproj'

    - stage: Build
      dependsOn:
      - Test
      jobs:
        - template: dotnet-publish-linux-mac-job.yml@templates
          parameters:
            buildConfiguration: 'Release'
            dotnetVersion: ${{ variables.DotnetVersion }}
            projectPath: 'src/OSSGadget.sln'
            projectName: 'oss-gadget-cli'
            exePath: 'oss-gadget-cli'
            artifactName: 'linux-mac-archive'
            preBuild:
            - template: nbgv-set-version-steps.yml@templates
        - template: dotnet-publish-win-netcore-job.yml@templates
          parameters:
            buildConfiguration: 'Release'
            dotnetVersion: ${{ variables.DotnetVersion }}
            projectPath: 'src/OSSGadget.sln'
            projectName: 'oss-gadget-cli'
            artifactName: 'win-netcore-archive'
            preBuild:
            - template: nbgv-set-version-steps.yml@templates
        - template: nuget-build-job.yml@templates
          parameters:
            jobName: 'pack_oss_find_squats_lib'
            buildConfiguration: 'Release'
            dotnetVersion: ${{ variables.DotnetVersion }}
            projectPath: 'src/oss-find-squats-lib/oss-find-squats-lib.sln'
            projectName: 'oss-find-squats-lib'
            artifactName: 'nuget-find-squats-lib-archive'
            preBuild:
            - template: nbgv-set-version-steps.yml@templates
        - template: nuget-build-job.yml@templates
          parameters:
            jobName: 'pack_SharedLib'
            buildConfiguration: 'Release'
            dotnetVersion: ${{ variables.DotnetVersion }}
            projectPath: 'src/Shared/Shared.Lib.csproj'
            projectName: 'Shared.Lib'
            artifactName: 'nuget-shared-lib-archive'
            preBuild:
            - template: nbgv-set-version-steps.yml@templates
        - template: nuget-build-job.yml@templates
          parameters:
            jobName: 'pack_SharedCLI'
            buildConfiguration: 'Release'
            dotnetVersion: ${{ variables.DotnetVersion }}
            projectPath: 'src/Shared.CLI/Shared.CLI.csproj'
            projectName: 'Shared.CLI'
            artifactName: 'nuget-shared-cli-archive'
            preBuild:
            - template: nbgv-set-version-steps.yml@templates
        - template: nuget-build-job.yml@templates
          parameters:
            jobName: 'pack_CLI'
            buildConfiguration: 'Release'
            dotnetVersion: ${{ variables.DotnetVersion }}
            projectPath: 'src/oss-gadget-cli/oss-gadget-cli.csproj'
            projectName: 'oss-gadget-cli'
            artifactName: 'nuget-shared-cli-archive'
            preBuild:
            - template: nbgv-set-version-steps.yml@templates
  
    - stage: Release
      dependsOn:
      - Build
      jobs:
      - job: sign_hash_release
        displayName: Code Sign, Generate Hashes, Publish Public Releases
        templateContext:
          outputs:
          - output: pipelineArtifact
            path: '$(Build.StagingDirectory)'
            artifact: 'Signed_Binaries_$(System.JobId)_$(System.JobAttempt)'
          # see https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/outputs/nuget-packages
          - output: nuget
            useDotNetTask: false
            packagesToPush: '$(Build.StagingDirectory)/*.nupkg'
            packageParentPath: '$(Build.StagingDirectory)'
            nuGetFeedType: external  
            publishPackageMetadata: true 
            publishFeedCredentials: 'sdl-oss-nuget-publish'
        steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
        - script: 'dotnet tool update -g nbgv'
          displayName: 'Install GitVersioning'
        - task: PowerShell@2
          displayName: Set Release Version
          inputs:
            targetType: 'inline'
            script: |
              $version = (nbgv get-version -v AssemblyInformationalVersion).split('+')[0]
              Write-Host "##vso[task.setvariable variable=ReleaseVersion;]$version"

        - task: DownloadPipelineArtifact@2
          inputs:
            displayName: 'Download linux-mac-archive'  
            buildType: 'current'
            artifactName: 'linux-mac-archive'
            targetPath: $(Build.BinariesDirectory)\Unsigned_Binaries\
        - task: DownloadPipelineArtifact@2
          inputs:
            displayName: 'Download win-netcore-archive'  
            buildType: 'current'
            artifactName: 'win-netcore-archive'
            targetPath: $(Build.BinariesDirectory)\Unsigned_Binaries\
        - task: DownloadPipelineArtifact@2
          inputs:
            displayName: 'Download nuget-find-squats-lib-archive'  
            buildType: 'current'
            artifactName: 'nuget-find-squats-lib-archive'
            targetPath: $(Build.BinariesDirectory)\Unsigned_Binaries\
        - task: DownloadPipelineArtifact@2
          inputs:
            displayName: 'Download nuget-shared-lib-archive'  
            buildType: 'current'
            artifactName: 'nuget-shared-lib-archive'
            targetPath: $(Build.BinariesDirectory)\Unsigned_Binaries\
        - task: DownloadPipelineArtifact@2
          inputs:
            displayName: 'Download nuget-shared-cli-archive'  
            buildType: 'current'
            artifactName: 'nuget-shared-cli-archive'
            targetPath: $(Build.BinariesDirectory)\Unsigned_Binaries\

        - task: ExtractFiles@1
          displayName: Extract Artifacts for Signing
          inputs:
            archiveFilePatterns: '$(Build.BinariesDirectory)\Unsigned_Binaries\*.zip'
            destinationFolder: '$(Build.BinariesDirectory)'
            cleanDestinationFolder: false
            overwriteExistingFiles: true

        - task: EsrpCodeSigning@5
          displayName: Code Sign Linux
          inputs:
            ConnectedServiceName: 'oss-esrp-signing-gadget-v5-connection'
            AppRegistrationClientId: '8efe2bf9-b4d7-4058-8982-bfc87dcdb034'
            AppRegistrationTenantId: '33e01921-4d64-4f8c-a055-5bdaffd5e33d'
            AuthAKVName: 'oss-signing-vault'
            AuthCertName: 'oss-gadget-auth-cert'
            AuthSignCertName: 'oss-gadget-signing-cert'
            FolderPath: '$(Build.BinariesDirectory)/linux/OSSGadget_linux_$(ReleaseVersion)'
            Pattern: ${{ variables.BinaryFiles }}
            signConfigType: 'inlineSignParams'
            inlineOperation: |
              [
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolSign",
                          "Parameters" : {
                              "OpusName" : "Microsoft",
                              "OpusInfo" : "http://www.microsoft.com",
                              "FileDigest" : "/fd \"SHA256\"",
                              "PageHash" : "/NPH",
                              "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                          },
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      },
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolVerify",
                          "Parameters" : {},
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      }
                  ]
            SessionTimeout: '60'
            MaxConcurrency: '50'
            MaxRetryAttempts: '5'
        - task: EsrpCodeSigning@5
          displayName: Code Sign MacOS
          inputs:
            ConnectedServiceName: 'oss-esrp-signing-gadget-v5-connection'
            AppRegistrationClientId: '8efe2bf9-b4d7-4058-8982-bfc87dcdb034'
            AppRegistrationTenantId: '33e01921-4d64-4f8c-a055-5bdaffd5e33d'
            AuthAKVName: 'oss-signing-vault'
            AuthCertName: 'oss-gadget-auth-cert'
            AuthSignCertName: 'oss-gadget-signing-cert'
            FolderPath: '$(Build.BinariesDirectory)/macos/OSSGadget_macos_$(ReleaseVersion)'
            Pattern: ${{ variables.BinaryFiles }}
            signConfigType: 'inlineSignParams'
            inlineOperation: |
              [
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolSign",
                          "Parameters" : {
                              "OpusName" : "Microsoft",
                              "OpusInfo" : "http://www.microsoft.com",
                              "FileDigest" : "/fd \"SHA256\"",
                              "PageHash" : "/NPH",
                              "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                          },
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      },
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolVerify",
                          "Parameters" : {},
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      }
                  ]
            SessionTimeout: '60'
            MaxConcurrency: '50'
            MaxRetryAttempts: '5'
        - task: EsrpCodeSigning@5
          displayName: Code Sign Windows
          inputs:
            ConnectedServiceName: 'oss-esrp-signing-gadget-v5-connection'
            AppRegistrationClientId: '8efe2bf9-b4d7-4058-8982-bfc87dcdb034'
            AppRegistrationTenantId: '33e01921-4d64-4f8c-a055-5bdaffd5e33d'
            AuthAKVName: 'oss-signing-vault'
            AuthCertName: 'oss-gadget-auth-cert'
            AuthSignCertName: 'oss-gadget-signing-cert'
            FolderPath: '$(Build.BinariesDirectory)/win/oss-gadget-cli_win_$(ReleaseVersion)'
            Pattern: ${{ variables.BinaryFiles }}
            signConfigType: 'inlineSignParams'
            inlineOperation: |
              [
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolSign",
                          "Parameters" : {
                              "OpusName" : "Microsoft",
                              "OpusInfo" : "http://www.microsoft.com",
                              "FileDigest" : "/fd \"SHA256\"",
                              "PageHash" : "/NPH",
                              "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                          },
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      },
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolVerify",
                          "Parameters" : {},
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      }
                  ]
            SessionTimeout: '60'
            MaxConcurrency: '50'
            MaxRetryAttempts: '5'
        - task: EsrpCodeSigning@5
          displayName: Code Sign .NET Core App
          inputs:
            ConnectedServiceName: 'oss-esrp-signing-gadget-v5-connection'
            AppRegistrationClientId: '8efe2bf9-b4d7-4058-8982-bfc87dcdb034'
            AppRegistrationTenantId: '33e01921-4d64-4f8c-a055-5bdaffd5e33d'
            AuthAKVName: 'oss-signing-vault'
            AuthCertName: 'oss-gadget-auth-cert'
            AuthSignCertName: 'oss-gadget-signing-cert'
            FolderPath: '$(Build.BinariesDirectory)/netcoreapp/oss-gadget-cli_netcoreapp_$(ReleaseVersion)'
            Pattern: ${{ variables.BinaryFiles }}
            signConfigType: 'inlineSignParams'
            inlineOperation: |
              [
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolSign",
                          "Parameters" : {
                              "OpusName" : "Microsoft",
                              "OpusInfo" : "http://www.microsoft.com",
                              "FileDigest" : "/fd \"SHA256\"",
                              "PageHash" : "/NPH",
                              "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                          },
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      },
                      {
                          "KeyCode" : "CP-230012",
                          "OperationCode" : "SigntoolVerify",
                          "Parameters" : {},
                          "ToolName" : "sign",
                          "ToolVersion" : "1.0"
                      }
                  ]
            SessionTimeout: '60'
            MaxConcurrency: '50'
            MaxRetryAttempts: '5'
        - powershell: 'Get-ChildItem -Path ''$(Build.BinariesDirectory)'' -Recurse CodeSign* | foreach { Remove-Item -Path $_.FullName }'
          displayName: 'Delete Code Sign Summaries'
        - task: ArchiveFiles@2
          displayName: Archive Artifact - Linux
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)/linux/OSSGadget_linux_$(ReleaseVersion)'
            includeRootFolder: true
            archiveType: 'tar'
            archiveFile: '$(Build.StagingDirectory)/OSSGadget_linux_$(ReleaseVersion).tar.gz'
            replaceExistingArchive: true
        - task: ArchiveFiles@2
          displayName: Archive Artifact - MacOS
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)/macos/OSSGadget_macos_$(ReleaseVersion)'
            includeRootFolder: true
            archiveType: 'tar'
            archiveFile: '$(Build.StagingDirectory)/OSSGadget_macos_$(ReleaseVersion).tar.gz'
            replaceExistingArchive: true
        - task: ArchiveFiles@2
          displayName: Archive Artifact - Windows
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)/win/oss-gadget-cli_win_$(ReleaseVersion)'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.StagingDirectory)/OSSGadget_win_$(ReleaseVersion).zip'
            replaceExistingArchive: true
        - task: ArchiveFiles@2
          displayName: Archive Artifact - .NET Core App
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)/netcoreapp/oss-gadget-cli_netcoreapp_$(ReleaseVersion)'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.StagingDirectory)/OSSGadget_netcoreapp_$(ReleaseVersion).zip'
            replaceExistingArchive: true
        - task: PowerShell@2
          displayName: Generate Hashes
          inputs:
            targetType: 'inline'
            script: |
              Get-ChildItem $(Build.StagingDirectory) | Foreach-Object {
                $name = $_.Name
                $tmp = (Get-FileHash "$(Build.StagingDirectory)/$name").Hash
                Add-Content $(Build.StagingDirectory)/HASHES.txt "$tmp`t$name"
              }
        - task: GitHubRelease@1
          displayName: Release to GitHub
          inputs:
            gitHubConnection: 'github.com_gfs'
            repositoryName: 'microsoft/OSSGadget'
            action: 'create'
            target: '$(Build.SourceVersion)'
            tagSource: 'userSpecifiedTag'
            tag: 'v$(ReleaseVersion)'
            title: 'OSS Gadget v$(ReleaseVersion)'
            assets: |
              $(Build.StagingDirectory)/*.tar.gz
              $(Build.StagingDirectory)/*.zip
              $(Build.StagingDirectory)/HASHES.txt
            changeLogCompareToRelease: 'lastNonDraftRelease'
            changeLogType: 'commitBased'
