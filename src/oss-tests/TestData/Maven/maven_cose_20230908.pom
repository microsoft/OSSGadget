<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.google.cose</groupId>
  <artifactId>cose</artifactId>
  <version>20230908</version>
  <dependencies>
    <dependency>
      <groupId>co.nstant.in</groupId>
      <artifactId>cbor</artifactId>
      <version>0.9</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>32.1.1-android</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.crypto.tink/tink-android -->
    <dependency>
      <groupId>com.google.crypto.tink</groupId>
      <artifactId>tink-android</artifactId>
      <version>1.10.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>1.69</version>
    </dependency>
  </dependencies>
  <packaging>jar</packaging>
  <name>COSE for Java</name>
  <description>Java implementation of RFC 8152: CBOR Object Signing and Encryption (COSE) </description>
  <url>https://github.com/android/cose-lib</url>
  <properties>
    <!-- Override this with -Dtest.include="**/SomeTest.java" on the CLI -->
    <test.include>%regex[.*.class]</test.include>
    <truth.version>1.1.2</truth.version>
    <checker-framework.version>3.12.0</checker-framework.version>
    <maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/android/cose-lib/issues</url>
  </issueManagement>
  <inceptionYear>2022</inceptionYear>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:https://github.com/android/cose-lib.git</connection>
    <developerConnection>scm:git:git@github.com:android/cose-lib.git</developerConnection>
    <url>https://github.com/android/cose-lib</url>
  </scm>
  <developers>
    <developer>
      <id>vikram-gaur</id>
      <name>Vikram Gaur</name>
      <email>vikramgaur@google.com</email>
      <organization>Google</organization>
      <organizationUrl>https://www.google.com</organizationUrl>
      <roles>
        <role>owner</role>
        <role>developer</role>
      </roles>
      <timezone>-8</timezone>
    </developer>
  </developers>
  <!-- TODO: Set this up -->
<!--  <ciManagement>-->
<!--    <system>GitHub Actions</system>-->
<!--    <url>https://github.com/android/cose-lib/actions</url>-->
<!--  </ciManagement>-->
  <!-- end TODO -->
  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>test</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.0.5</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>1.8.0</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!--
            Target Java 8 so that we are roughly compatible with Android API level
            26/Android 8. If we targeted a newer version, the identity credentials
            code wouldn't be able to take a dependency on this library.
          -->
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <compilerArgs>
              <arg>-XDcompilePolicy=simple</arg>
              <arg>-Xplugin:ErrorProne</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>2.14.0</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>post-integration-test</phase>
              <goals><goal>jar</goal></goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <quiet>true</quiet>
            <notimestamp>true</notimestamp>
            <encoding>UTF-8</encoding>
            <docencoding>UTF-8</docencoding>
            <charset>UTF-8</charset>
            <additionalOptions>
              <additionalOption>-XDignore.symbol.file</additionalOption>
              <additionalOption>-Xdoclint:-html</additionalOption>
            </additionalOptions>
            <linksource>true</linksource>
            <source>8</source>
            <additionalJOption>${maven-javadoc-plugin.additionalJOptions}</additionalJOption>
          </configuration>
          <executions>
            <execution>
              <id>attach-docs</id>
              <phase>post-integration-test</phase>
              <goals><goal>jar</goal></goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
          <configuration>
            <includes>
              <include>${test.include}</include>
            </includes>
            <redirectTestOutputToFile>false</redirectTestOutputToFile>
            <forkCount>0</forkCount>
            <runOrder>alphabetical</runOrder>
            <!-- Set max heap for tests. -->
            <!-- Catch dependencies on the default locale by setting it to hi-IN. -->
            <argLine>-Xmx1536M -Duser.language=hi -Duser.country=IN ${test.add.opens}</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>sonatype-oss-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
          Passes JDK 9-12-specific `no-module-directories` flag to Javadoc tool,
          which is required to make symbol search work correctly in the generated
          pages.
          This flag does not exist on 8 and 13+ (https://bugs.openjdk.java.net/browse/JDK-8215582).
          Consider removing it once our release and test scripts are migrated to a recent JDK (17+).
       -->
      <id>javadocs-jdk9-12</id>
      <activation>
        <jdk>[9,13)</jdk>
      </activation>
      <properties>
        <maven-javadoc-plugin.additionalJOptions>--no-module-directories</maven-javadoc-plugin.additionalJOptions>
      </properties>
    </profile>
    <profile>
      <id>open-jre-modules</id>
      <activation>
        <jdk>[9,]</jdk>
      </activation>
      <properties>
        <!--
            Some tests need reflective access to the internals of these packages. It is ony the
            tests themselves and not the code being tested that needs that access, though there's no
            obvious way to ensure that.
            We could consider arranging things so that only the tests we know need this would get
            the add-opens. Right now that doesn't seem worth the effort, though.
        -->
        <test.add.opens>
          --add-opens java.base/java.lang=ALL-UNNAMED
          --add-opens java.base/java.util=ALL-UNNAMED
          --add-opens java.base/java.util.concurrent.locks=ALL-UNNAMED
          --add-opens java.base/sun.security.jca=ALL-UNNAMED
        </test.add.opens>
      </properties>
    </profile>
  </profiles>
</project>
