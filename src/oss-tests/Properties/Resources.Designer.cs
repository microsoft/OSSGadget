//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace oss {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("oss-tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;_id&quot;:&quot;@angular/core&quot;,&quot;_rev&quot;:&quot;657-0ac278fe941aa315fa5b063b2d70170d&quot;,&quot;name&quot;:&quot;@angular/core&quot;,&quot;dist-tags&quot;:{&quot;latest&quot;:&quot;13.2.5&quot;,&quot;v4-lts&quot;:&quot;4.4.7&quot;,&quot;v5-lts&quot;:&quot;5.2.11&quot;,&quot;next&quot;:&quot;14.0.0-next.5&quot;,&quot;v7-lts&quot;:&quot;7.2.15&quot;,&quot;v6-lts&quot;:&quot;6.1.10&quot;,&quot;v9-lts&quot;:&quot;9.1.13&quot;,&quot;v8-lts&quot;:&quot;8.2.14&quot;,&quot;v10-lts&quot;:&quot;10.2.5&quot;,&quot;v11-lts&quot;:&quot;11.2.14&quot;,&quot;v12-lts&quot;:&quot;12.2.16&quot;},&quot;versions&quot;:{&quot;0.0.0-0&quot;:{&quot;name&quot;:&quot;@angular/core&quot;,&quot;version&quot;:&quot;0.0.0-0&quot;,&quot;description&quot;:&quot;&quot;,&quot;main&quot;:&quot;index.js&quot;,&quot;jsnext:main&quot;:&quot;esm/index.js&quot;,&quot;typings&quot;:&quot;index.d.ts&quot;,&quot;author&quot;:{&quot;name&quot;:&quot;angular&quot;},&quot;license&quot;:&quot;MIT&quot;,&quot;p [rest of string was tru....
        /// </summary>
        internal static string angular_core_json {
            get {
                return ResourceManager.GetString("angular_core.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;_id&quot;:&quot;ds-modal&quot;,&quot;_rev&quot;:&quot;9-9ea35761f56735940a8303bde2186667&quot;,&quot;time&quot;:{&quot;1.0.0&quot;:&quot;2018-08-05T11:35:40.880Z&quot;,&quot;1.0.1&quot;:&quot;2018-08-05T11:35:40.880Z&quot;,&quot;1.0.2&quot;:&quot;2018-08-05T11:35:40.880Z&quot;,&quot;1.0.3&quot;:&quot;2018-08-05T11:35:40.880Z&quot;,&quot;1.0.4&quot;:&quot;2018-08-05T11:35:40.880Z&quot;,&quot;created&quot;:&quot;2018-08-06T12:04:34.792Z&quot;,&quot;0.0.0&quot;:&quot;2018-08-06T12:04:34.910Z&quot;,&quot;modified&quot;:&quot;2018-08-09T07:24:09.131Z&quot;,&quot;0.0.1&quot;:&quot;2018-08-09T04:53:46.623Z&quot;,&quot;0.0.2&quot;:&quot;2018-08-09T07:24:06.206Z&quot;},&quot;name&quot;:&quot;ds-modal&quot;,&quot;dist-tags&quot;:{&quot;latest&quot;:&quot;0.0.2&quot;},&quot;versions&quot;:{&quot;0.0.0&quot;:{&quot;name&quot;:&quot;ds-modal [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ds_modal_json {
            get {
                return ResourceManager.GetString("ds-modal.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {}.
        /// </summary>
        internal static string lodash_json {
            get {
                return ResourceManager.GetString("lodash.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;_id&quot;:&quot;monorepolint&quot;,&quot;_rev&quot;:&quot;86-d9db0817e2fa6be1511b2f5ebac3d41a&quot;,&quot;name&quot;:&quot;monorepolint&quot;,&quot;dist-tags&quot;:{&quot;canary&quot;:&quot;0.5.0-alpha.80&quot;,&quot;latest&quot;:&quot;0.4.0&quot;},&quot;versions&quot;:{&quot;0.2.1-alpha.0&quot;:{&quot;name&quot;:&quot;monorepolint&quot;,&quot;version&quot;:&quot;0.2.1-alpha.0&quot;,&quot;license&quot;:&quot;MIT&quot;,&quot;scripts&quot;:{&quot;clean&quot;:&quot;rm -rf build lib&quot;,&quot;compile:typescript&quot;:&quot;../../node_modules/.bin/tsc&quot;,&quot;jest:watch&quot;:&quot;../../node_modules/.bin/jest --config ../../jest.config.js --watch&quot;,&quot;jest&quot;:&quot;../../node_modules/.bin/jest --config ../../jest.config.js&quot;,&quot;lint:typescript&quot;:&quot;../../node_modu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string monorepolint_json {
            get {
                return ResourceManager.GetString("monorepolint.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;_id&quot;:&quot;rly-cli&quot;,&quot;_rev&quot;:&quot;1-9c3af62fce8735e325b8c2f7aa977f48&quot;,&quot;name&quot;:&quot;rly-cli&quot;,&quot;dist-tags&quot;:{&quot;latest&quot;:&quot;0.0.2&quot;},&quot;versions&quot;:{&quot;0.0.1&quot;:{&quot;name&quot;:&quot;rly-cli&quot;,&quot;version&quot;:&quot;0.0.1&quot;,&quot;description&quot;:&quot;DFS CLI allows you to setup fungilble SPL tokens and call Rally token programs from the command line.&quot;,&quot;bin&quot;:{&quot;rly-cli&quot;:&quot;lib/cli/src/rly-cli.js&quot;},&quot;keywords&quot;:[],&quot;author&quot;:&quot;&quot;,&quot;scripts&quot;:{&quot;tsc&quot;:&quot;tsc&quot;,&quot;test&quot;:&quot;./node_modules/ts-mocha/bin/ts-mocha -p ./tsconfig.json -t 1000000 -r dotenv/config tests/**/*.ts&quot;},&quot;license&quot;:&quot;ISC&quot;,&quot;publishConfi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string rly_cli_json {
            get {
                return ResourceManager.GetString("rly-cli.json", resourceCulture);
            }
        }
    }
}
